this.styles = [];

var computedStyle = window.getComputedStyle(document.body);

for (let i = 0; i < computedStyle.length; i ++) {
	let prop = computedStyle[i];
	this.styles[prop] = Object.create(null);
}


...



let newStyle = {
	els: [clone],
	decls: {}
};

for (let i = 0; i < computedStyle.length; i ++) {
	let prop = computedStyle[i];
	let value = computedStyle[prop];

	newStyle.decls[prop] = value;

	for (let k = 0; k < this.styles.length; k ++) {
		let style = this.styles[k];
		if (prop in style.decls && style.decls[prop] === value) {
			style.els.forEach(el => {
				if (newStyle.els.indexOf(el) === -1) {
					newStyle.els.push(el);
				}
			});
			delete style.decls[prop];
			if (Object.keys(style.decls).length === 0) {
				this.styles.splice(k, 1);
			}
		}
	}
}

this.styles.push(newStyle);


...


let stylesText = this.styles.map(style => {
	let selector = style.els.map(el => '.' + el.className).join(', ');
	let declsArray = [];
	Object.keys(style.decls).forEach(prop => {
		declsArray.push(`${prop}: ${style.decls[prop]};`);
	});
	return `${selector} { ${declsArray.join(' ')} }`;
}).join(' ');